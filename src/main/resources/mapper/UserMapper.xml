<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csu.software.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.csu.software.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="TINYINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="hello_word" property="helloWord" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_account, password, role, user_name, hello_word
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.csu.software.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info (user_account, password, role, 
      user_name, hello_word)
    values (#{userAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=TINYINT}, 
      #{userName,jdbcType=VARCHAR}, #{helloWord,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.csu.software.model.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="helloWord != null" >
        hello_word,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=TINYINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="helloWord != null" >
        #{helloWord,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csu.software.model.User" >
    update user_info
    <set >
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="helloWord != null" >
        hello_word = #{helloWord,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csu.software.model.User" >
    update user_info
    set user_account = #{userAccount,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role = #{role,jdbcType=TINYINT},
      user_name = #{userName,jdbcType=VARCHAR},
      hello_word = #{helloWord,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="register">
    insert into user_info(user_account,password,role,user_name,hello_word)
    values(#{userAccount},#{password},#{role},#{username},#{helloWord})

  </insert>

  <select id="login" resultType="com.csu.software.model.User">
    select * from user_info
    <where>
      user_account = #{userAccount}
      and
      password = #{password}
    </where>

  </select>

</mapper>